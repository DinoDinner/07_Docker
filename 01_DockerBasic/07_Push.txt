
[ 7-1 Dockerfile 생성 ]

1. vi Dockerfile을 입력하면 Dockerfie이 생성되면서 vi 입력기로 진입한다.
2. i를 누르면 vi insert 모드로 변경한다.
3. Dockerfile에 아래를 차례대로 입력하고 esc를 눌러 insert모드를 종료하고, :wq로 저장/종료한다.
    FROM ubuntu:18.04
    RUN apt-get update
    CMD ["echo", "Hello FastCampus"]
4. cat Dockerfile로 안의 내용이 제대로 들어갔는지 확인한다.

[ 7-2 Dockerfile image로 만들기 ]

1. docker build --help로 build에 대한 명령어를 확인 할 수 있다.
2. docker build -t my-image:v.1.0.0 . 로 image를 만들 수 있다.
3. image를 생성하기 위해선 tag(my-image)와 version(v.1.0.0), 위치(.) 을 모두 입력해줘야한다.
4. docker images | grep my-image 를 입려하여 제대로 image가 생성된 것을 확인할 수 있다.
5. docker run my-image:v1.0.0 으로 생성한 image를 실행 할 수 있다. 

[ 7-3 Registry애 Image 올리기 ]

1. Image를 올릴 수 있은 Registry를 생성한다.
2. docker run -d -p 5000:5000 --name registry registry
3. port number는 host 5000, registry Container도 5000으로 설정한다.
4. docker push localhost:5000/my-image:v1.0.0 를 입력해서 localhost:5000에 push한다.
5. curl -X GET http://localhost:5000/v2/_catalog 를 입력하면 my-image가 registry에 올라가 있는 걸 확인 할 수 있다.
6. curl -X GET http://localhost:5000/v2/my-image/tags/list 를 입력하면 my-image의 tag도 확인할 수 있다.
7. 모든 내용은 REST API를 호출하여 JSON의 형태로 출력된다.

[ 7-4 Docker HUB에 Image Push ]

1. Docker login 을 입력하여 docker에 로그인 한다.
2. docker tag my-image:v1.0.0 <id>/my-image:v1.0.0 를 입력하여 image에 tag를 부여하고,
3. docker push <id>/my-image:v1.0.0 를 입력하여 Push를 할 수 있다.
4. Push가 끝나면, docker hub 사이트에서 확인할 수 있다.

===========================================================================================================

# Vi : Unix, Linux, macOS 등에서 사용되는 텍스트 편집기이며 설치가 따로 필요없다. (vscode와 비슷한거다..)
# Build : dockerfile을 image로 만들어준다.
# |(pipe) : 두개의 명령어를 합쳐서 쓰기위한 명령어.
# docker image | grep은 image를 명령어 이후 grep 명령어를 실행한다.
# Registry : Iamge 파일을 관리하는 저장소