[1-1 Application Code 만들기 ]

https://learn.microsoft.com/ko-kr/azure/aks/tutorial-kubernetes-deploy-cluster?tabs=azure-cli
AKS 자습서

1. github 주소 복사 -> cmd 입력
$ git clone https://github.com/Azure-Samples/azure-voting-app-redis.git

2. 설치된 폴더로 이동하기
$ cd azure-voting-app-redis

3. Yaml파일 확인하기
$ cat docker-compose.yaml
->  front/back으로 나눠져있다

[1-2 Container Image 만들기 ]
1. docker-compose 설치하기
$ sudo apt-get install docker-compose

->  ubuntu만 apt-get을 사용할 수 있다.
    docker-compose는 여러파일(front,back)을 묶을 수 있는 프로그램.

2. docker-compose 실행하기
$ docker-compose up -d
->  -d를 했기때문에 container까지 올릴 수 있다.
    azure resouce의 ip:8080에 연결을 하려하지만,
    cloud 환경에서는 기본적으로 다 막아놓기 때문에 풀어줘야한다.
    8080 port number를 풀어어야한다.

3. Auzre 방화벽 설정
->  azure portal에서 network 설정
    inboud : 나한테서 나가는거
    outbound : 나한테 들어오는것
    (azure는 out bound만 요금을 받음)

    인바운드 포트규칙 추가
    외부로 요청할 예정이라, 서비스는 http로 설정하지만 80으로 고정되어 있음
    원하는 포트로 설정하기 위해 custom으로 설정, 8080 지정

    우선순위는 낮을 수록 좋다.
    inbound 포트 규칙이 추가된걸 확인할 수 있다.
    outbound도 바로 만들어줘야한다 역시 8080으로

    이제 ip:8080으로 접속 가능하다.

[1-3 리소스 정리 ]

1. 컨테이너 제거
$ docker-compose down

docker container registry : docker image registry를 관리해주는 프로그램
acr(azure container registry)와 같다

container push를 하면 docker container registry를 통해 container에 올라간다

acr의 역할 : docker hub
aks의 역할 : kube

it시스템 작은 것을 이애하면 큰것도 이해하기 좋다. 모두 비슷한 양상

CLI : command line interface -> 명령어를 줄로 입력할 수 있는 인터페이스(cmd)

az : azure

[ azure cli 설치 ]
https://learn.microsoft.com/ko-kr/cli/azure/install-azure-cli-linux?pivots=apt

1. 스크립트 다운
$ curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash 입력

2. Azure 로그인
$ azure login

sudo az login -> http 링크로 들어가서 코드입력

3. | pipline : 출력이 다른 곳에 이동해줌
terminal 접속하여 입력을 할때 마다 스크린으로 화면이 출력됨
-> 스크린에 pipe로 연결됨

파이프 꽂는 법 : > 방향키로 파일을 지정하게 되면 파일이 저장됨